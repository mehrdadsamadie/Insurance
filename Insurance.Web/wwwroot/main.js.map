{"version":3,"sources":["./src/app/mga/mga-list/mga-list.component.ts","./src/app/mga/mga-list/mga-list.component.html","./src/app/mga/mga.component.ts","./src/app/mga/mga.component.html","./src/app/carrier/carrier-list/carrier-list.component.ts","./src/app/carrier/carrier-list/carrier-list.component.html","./src/app/shared/carrier.service.ts","./src/app/carrier/carrier-detail/carrier-detail.component.ts","./src/app/carrier/carrier-detail/carrier-detail.component.html","./src/app/advisor/advisor-detail/advisor-detail.component.ts","./src/app/advisor/advisor-detail/advisor-detail.component.html","./src/environments/environment.ts","./src/app/contract/contract.component.ts","./src/app/contract/contract.component.html","./src/app/shared/mga.service.ts","./src/app/model/carrier.model.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/carrier/carrier.component.ts","./src/app/carrier/carrier.component.html","./src/app/app.module.ts","./src/app/model/grid-value.model.ts","./src/app/shared/contract.service.ts","./src/app/model/mga.model.ts","./src/app/model/advisor.model.ts","./src/app/mga/mga-detail/mga-detail.component.ts","./src/app/mga/mga-detail/mga-detail.component.html","./src/app/app-routing.module.ts","./src/app/advisor/advisor.component.ts","./src/app/advisor/advisor.component.html","./src/app/shared/advisor.service.ts","./src/app/advisor/advisor-list/advisor-list.component.ts","./src/app/advisor/advisor-list/advisor-list.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { MgaService } from 'src/app/shared/mga.service';\nimport { Mga, MgaList } from 'src/app/model/mga.model';\n\n@Component({\n  selector: 'app-mga-list',\n  templateUrl: './mga-list.component.html',\n  styleUrls: ['./mga-list.component.css']\n})\nexport class MgaListComponent implements OnInit {\n\n  constructor(public service: MgaService) { }\n\n  ngOnInit(): void {\n    this.service.restGridValue();\n    this.refreshGrid();\n  }\n  refreshGrid() {\n    this.service.getMga();\n  }\n  update(mga: Mga) {\n\n    this.service.formData = Object.assign({}, mga)\n  }\n  setPage(page: number) {\n    this.service.gridValue.Page = page;\n    this.refreshGrid();\n  }\n  delete(id: number) {\n    if (window.confirm('Are sure you want to delete this item ?')) {\n      this.service.deleteMga(id).subscribe\n        (\n          res => {\n            this.refreshGrid();\n          },\n          err => {\n          }\n        )\n    }\n  }\n}\n","<table class=\"table table-hover\">\r\n  <tr>\r\n    <th>Id</th>\r\n    <th>Business Name</th>\r\n    <th>Business Address</th>\r\n    <th>Business PhoneNumber</th>\r\n    <th>Delete</th>\r\n  </tr>\r\n  <tr *ngFor=\"let item of service.mgaList.List;\">\r\n    <td (click)=update(item)>{{item.Id}}</td>\r\n    <td (click)=update(item)>{{item.BusinessName}}</td>\r\n    <td (click)=update(item)>{{item.BusinessAddress}}</td>\r\n    <td (click)=update(item)>{{item.BusinessPhoneNumber}}</td>\r\n    <td (click)=delete(item.Id)><i class=\"material-icons\" id=\"deletemga\"> delete </i></td>\r\n  </tr>\r\n</table>\r\n<div *ngIf=\"service.gridValue.TotalPage>1\" class=\"card-footer pb-0 pt-3\">\r\n  <ul  class=\"pagination\">\r\n\r\n    <li [ngClass]=\"{disabled:service.gridValue.Page === 1}\" class=\"page-item first-item\">\r\n      <a (click)=setPage(1) class=\"page-link\">First</a>\r\n    </li>\r\n    <li [ngClass]=\"{disabled:service.gridValue.Page === 1}\" class=\"page-item previous-item\">\r\n      <a (click)=setPage(service.gridValue.Page-1) class=\"page-link\">Previous</a>\r\n    </li>\r\n    <li *ngFor=\"let page of [].constructor(service.gridValue.TotalPage) , let i = index\"\r\n        [ngClass]=\"{active:service.gridValue.Page === i+1}\" class=\"page-item number-item\">\r\n      <a (click)=setPage(i+1) class=\"page-link\">{{i+1}}</a>\r\n    </li>\r\n    <li [ngClass]=\"{disabled:service.gridValue.Page === service.gridValue.TotalPage}\" class=\"page-item next-item\">\r\n      <a (click)=setPage(service.gridValue.Page+1) class=\"page-link\">Next</a>\r\n    </li>\r\n    <li [ngClass]=\"{disabled:service.gridValue.Page === service.gridValue.TotalPage}\" class=\"page-item last-item\">\r\n      <a (click)=setPage(service.gridValue.TotalPage) class=\"page-link\">Last</a>\r\n    </li>\r\n  </ul>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-mga',\n  templateUrl: './mga.component.html',\n  styleUrls: ['./mga.component.css']\n})\nexport class MgaComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"jumbtron\">\r\n  <h1 class=\"display-4 text-center\">MGA</h1>\r\n  <hr>\r\n  <div class=\"row\">\r\n    <div class=\"col-md-5\">\r\n      <app-mga-detail></app-mga-detail>\r\n    </div>\r\n    <div class=\"col-md-7\">\r\n      <app-mga-list></app-mga-list>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { CarrierService } from 'src/app/shared/carrier.service';\nimport { Carrier, CarrierList } from 'src/app/model/carrier.model';\n\n@Component({\n  selector: 'app-carrier-list',\n  templateUrl: './carrier-list.component.html',\n  styleUrls: ['./carrier-list.component.css']\n})\nexport class CarrierListComponent implements OnInit {\n\n  constructor(public service: CarrierService) { }\n\n  ngOnInit(): void {\n    this.service.restGridValue();\n    this.refreshGrid();\n\n  }\n  refreshGrid() {\n    this.service.getCarrier();\n  }\n  update(carrier: Carrier) {\n\n    this.service.formData = Object.assign({}, carrier)\n  }\n  setPage(page: number) {\n    this.service.gridValue.Page = page;\n    this.refreshGrid();\n  }\n  delete(id: number) {\n    if (window.confirm('Are sure you want to delete this item ?')) {\n      this.service.deleteCarrier(id).subscribe\n        (\n          res => {\n            this.refreshGrid();\n          },\n          err => {\n          }\n        )\n    }\n  }\n}\n","<table class=\"table table-hover\">\r\n  <tr>\r\n    <th>Id</th>\r\n    <th>Business Name</th>\r\n    <th>Business Address</th>\r\n    <th>Business PhoneNumber</th>\r\n    <th>Delete</th>\r\n  </tr>\r\n  <tr *ngFor=\"let item of service.carrierList.List;\">\r\n    <td (click)=update(item)>{{item.Id}}</td>\r\n    <td (click)=update(item)>{{item.BusinessName}}</td>\r\n    <td (click)=update(item)>{{item.BusinessAddress}}</td>\r\n    <td (click)=update(item)>{{item.BusinessPhoneNumber}}</td>\r\n    <td (click)=delete(item.Id)><i class=\"material-icons\" id=\"deletecarrier\"> delete </i></td>\r\n  </tr>\r\n</table>\r\n<div *ngIf=\"service.gridValue.TotalPage>1\" class=\"card-footer pb-0 pt-3\">\r\n  <ul  class=\"pagination\">\r\n\r\n    <li [ngClass]=\"{disabled:service.gridValue.Page === 1}\" class=\"page-item first-item\">\r\n      <a (click)=setPage(1) class=\"page-link\">First</a>\r\n    </li>\r\n    <li [ngClass]=\"{disabled:service.gridValue.Page === 1}\" class=\"page-item previous-item\">\r\n      <a (click)=setPage(service.gridValue.Page-1) class=\"page-link\">Previous</a>\r\n    </li>\r\n    <li *ngFor=\"let page of [].constructor(service.gridValue.TotalPage) , let i = index\"\r\n        [ngClass]=\"{active:service.gridValue.Page === i+1}\" class=\"page-item number-item\">\r\n      <a (click)=setPage(i+1) class=\"page-link\">{{i+1}}</a>\r\n    </li>\r\n    <li [ngClass]=\"{disabled:service.gridValue.Page === service.gridValue.TotalPage}\" class=\"page-item next-item\">\r\n      <a (click)=setPage(service.gridValue.Page+1) class=\"page-link\">Next</a>\r\n    </li>\r\n    <li [ngClass]=\"{disabled:service.gridValue.Page === service.gridValue.TotalPage}\" class=\"page-item last-item\">\r\n      <a (click)=setPage(service.gridValue.TotalPage) class=\"page-link\">Last</a>\r\n    </li>\r\n  </ul>\r\n</div>\r\n","import { Component, OnInit, Output, EventEmitter, Injectable } from '@angular/core';\nimport { GridValue } from '../model/grid-value.model';\nimport { Carrier, CarrierList } from '../model/carrier.model';\nimport { HttpEventType, HttpClient, HttpHeaders, HttpParams, HttpErrorResponse } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CarrierService {\n  //readonly APIUrl = \"https://insuranceapp.azurewebsites.net/api/\";\n  readonly APIUrl = \"https://localhost:44304/api/\";\n  formData: Carrier\n  gridValue: GridValue;\n  carrierList: CarrierList;\n  constructor(public http: HttpClient)\n  {\n    this.carrierList = new CarrierList();\n    this.gridValue = new GridValue();\n  }\n  restGridValue() {\n    this.gridValue.Page = 1;\n    this.gridValue.PageSize = 7;\n    this.gridValue.TotalPage = 0;\n  }\n  postCarrier(formData: Carrier) {\n    return this.http.post(this.APIUrl + 'carrier', this.formData)\n  }\n  getCarrier() {\n\n    let params = new HttpParams();\n    params = params.append('page', this.gridValue.Page == null ? '' : this.gridValue.Page.toString());\n    params = params.append('pageSize', this.gridValue.PageSize == null ? '': this.gridValue.PageSize.toString());\n    return this.http.get(this.APIUrl + 'carrier', { params: params }).subscribe\n      (\n\n        res => {\n          this.carrierList = res as CarrierList\n          this.gridValue.TotalItem = this.carrierList.Total;\n          this.gridValue.TotalPage = Math.ceil(this.carrierList.Total / this.gridValue.PageSize)\n        },\n        err => {\n\n        }\n      )\n  }\n  deleteCarrier(id: number) {\n    let httpParams = new HttpParams().set('id', id.toString());\n    let options = { params: httpParams };\n    return this.http.delete(this.APIUrl +'carrier/' + id.toString());\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { CarrierService } from 'src/app/shared/carrier.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-carrier-detail',\n  templateUrl: './carrier-detail.component.html',\n  styleUrls: ['./carrier-detail.component.css']\n})\nexport class CarrierDetailComponent implements OnInit {\n\n  constructor(public service: CarrierService)\n  {\n  }\n  errorList: Array<string>;\n  ngOnInit(): void {\n    this.resterror();\n    this.restForm();\n  }\n  resterror() {\n    this.errorList = [];\n  }\n  restForm(form?: NgForm) {\n    if (form != null)\n      form.resetForm();\n    this.service.formData =\n    {\n      Id: 0,\n      BusinessName: '',\n      BusinessAddress: '',\n      BusinessPhoneNumber: ''\n    }\n  }\n  onSubmit(form: NgForm) {\n    this.resterror();\n    this.service.postCarrier(form.value).subscribe(\n      res => {\n        this.restForm(form);\n        this.service.getCarrier();\n      },\n      err => {\n        console.log(err.error.errors);\n        this.parseErrors(err.error.errors)\n      }\n    )\n  }\n  parseErrors(response) {\n    var errors = [];\n    for (var key in response) {\n      for (var i = 0; i < response[key].length; i++) {\n        errors.push(response[key][i]);\n      }\n    }\n    this.errorList = errors;\n  }\n}\n","<form #form=\"ngForm\" autocomplete=\"off\" (submit)=\"onSubmit(form)\">\r\n  <input type=\"hidden\" name=\"Id\" #ContactId=\"ngModel\" [(ngModel)]=\"service.formData.Id\" />\r\n\r\n  <div class=\"form-group\">\r\n    <div class=\"input-group\">\r\n      <div class=\"input-group-prepend\">\r\n        <div class=\"input-group-text bg-white\">\r\n          <i class=\"material-icons\">business</i>\r\n        </div>\r\n      </div>\r\n      <input name=\"BusinessName\" #BusinessName=\"ngModel\" [(ngModel)]=\"service.formData.BusinessName\" class=\"form-control\"\r\n             placeholder=\"Business Name\" required />\r\n    </div>\r\n\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <div class=\"input-group\">\r\n      <div class=\"input-group-prepend\">\r\n        <div class=\"input-group-text bg-white\">\r\n          <i class=\"material-icons\">home_work</i>\r\n        </div>\r\n      </div>\r\n      <input name=\"BusinessAddress\" #BusinessAddress=\"ngModel\" [(ngModel)]=\"service.formData.BusinessAddress\" class=\"form-control\"\r\n             placeholder=\"Business Address\" />\r\n    </div>\r\n\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <div class=\"input-group\">\r\n      <div class=\"input-group-prepend\">\r\n        <div class=\"input-group-text bg-white\">\r\n          <i class=\"material-icons\">settings_cell</i>\r\n        </div>\r\n      </div>\r\n      <input name=\"BusinessPhoneNumber\" #BusinessPhoneNumber=\"ngModel\" [(ngModel)]=\"service.formData.BusinessPhoneNumber\" class=\"form-control\"\r\n             placeholder=\"Business PhoneNumber\" />\r\n    </div>\r\n\r\n  </div>\r\n<div class=\"form-group\">\r\n  <button class=\"btn btn-success btn-lg btn-block\" type=\"submit\" [disabled]=\"form.invalid\">Submit</button>\r\n</div>\r\n</form>\r\n<ul>\r\n  <li *ngFor=\"let item of errorList; let i = index\" class=\"message\">\r\n    {{item}}\r\n  </li>\r\n</ul>\r\n","import { Component, OnInit } from '@angular/core';\nimport { AdvisorService } from 'src/app/shared/advisor.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-advisor-detail',\n  templateUrl: './advisor-detail.component.html',\n  styleUrls: ['./advisor-detail.component.css']\n})\nexport class AdvisorDetailComponent implements OnInit {\n\n  constructor(public service: AdvisorService) { }\n\n  errorList: Array<string>;\n  ngOnInit(): void {\n    this.resterror();\n    this.restForm();\n  }\n  resterror() {\n    this.errorList = [];\n  }\n  restForm(form?: NgForm) {\n    if (form != null)\n      form.resetForm();\n    this.service.formData =\n    {\n      Id: 0,\n      FirstName: '',\n      LastName: '',\n      PhoneNumber: '',\n      Address: '',\n      HealthStatus: ''\n    }\n  }\n  onSubmit(form: NgForm) {\n    this.resterror();\n    this.service.postCarrier(form.value).subscribe(\n      res => {\n        this.restForm(form);\n        this.service.getAdvisor();\n      },\n      err => {\n        console.log(err.error.errors);\n        this.parseErrors(err.error.errors)\n      }\n    )\n  }\n  parseErrors(response) {\n    var errors = [];\n    for (var key in response) {\n      for (var i = 0; i < response[key].length; i++) {\n        errors.push(response[key][i]);\n      }\n    }\n    this.errorList = errors;\n  }\n\n}\n","<form #form=\"ngForm\" autocomplete=\"off\" (submit)=\"onSubmit(form)\">\r\n  <input type=\"hidden\" name=\"Id\" #ContactId=\"ngModel\" [(ngModel)]=\"service.formData.Id\" />\r\n\r\n  <div class=\"form-group\">\r\n    <div class=\"input-group\">\r\n      <div class=\"input-group-prepend\">\r\n        <div class=\"input-group-text bg-white\">\r\n          <i class=\"material-icons\">face</i>\r\n        </div>\r\n      </div>\r\n      <input name=\"FirstName\" #BusinessName=\"ngModel\" [(ngModel)]=\"service.formData.FirstName\" class=\"form-control\"\r\n             placeholder=\"First Name\" required />\r\n    </div>\r\n\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <div class=\"input-group\">\r\n      <div class=\"input-group-prepend\">\r\n        <div class=\"input-group-text bg-white\">\r\n          <i class=\"material-icons\">face</i>\r\n        </div>\r\n      </div>\r\n      <input name=\"LastName\" #BusinessAddress=\"ngModel\" [(ngModel)]=\"service.formData.LastName\" class=\"form-control\"\r\n             placeholder=\"Last Name\" />\r\n    </div>\r\n\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <div class=\"input-group\">\r\n      <div class=\"input-group-prepend\">\r\n        <div class=\"input-group-text bg-white\">\r\n          <i class=\"material-icons\">settings_cell</i>\r\n        </div>\r\n      </div>\r\n      <input name=\"PhoneNumber\" #BusinessPhoneNumber=\"ngModel\" [(ngModel)]=\"service.formData.PhoneNumber\" class=\"form-control\"\r\n             placeholder=\"PhoneNumber\" />\r\n    </div>\r\n\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <div class=\"input-group\">\r\n      <div class=\"input-group-prepend\">\r\n        <div class=\"input-group-text bg-white\">\r\n          <i class=\"material-icons\">home_work</i>\r\n        </div>\r\n      </div>\r\n      <input name=\"Address\" #BusinessPhoneNumber=\"ngModel\" [(ngModel)]=\"service.formData.Address\" class=\"form-control\"\r\n             placeholder=\"Address\" />\r\n    </div>\r\n\r\n  </div>\r\n  <div *ngIf=\"service.formData.Id!=0\" class=\"form-group\">\r\n    <div class=\"input-group\">\r\n      <div class=\"input-group-prepend\">\r\n        <div class=\"input-group-text bg-white\">\r\n          <i class=\"material-icons\">health_and_safety</i>\r\n        </div>\r\n      </div>\r\n      <select  name=\"HealthStatus\" [(ngModel)]=\"service.formData.HealthStatus\" class=\"form-control\">\r\n        <option value=\"Red\">Red</option>\r\n        <option value=\"Green\">Green</option>\r\n      </select>\r\n    </div>\r\n\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <button class=\"btn btn-success btn-lg btn-block\" type=\"submit\" [disabled]=\"form.invalid\">Submit</button>\r\n  </div>\r\n</form>\r\n<ul>\r\n  <li *ngFor=\"let item of errorList; let i = index\" class=\"message\">\r\n    {{item}}\r\n  </li>\r\n</ul>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit, Output, EventEmitter, Injectable } from '@angular/core';\nimport { GridValue } from '../model/grid-value.model';\nimport { ContractService } from 'src/app/shared/contract.service';\nimport { AdvisorService } from 'src/app/shared/advisor.service';\nimport { CarrierService } from 'src/app/shared/carrier.service';\nimport { MgaService } from 'src/app/shared/mga.service';\nimport { HttpEventType, HttpClient, HttpHeaders, HttpParams, HttpErrorResponse } from '@angular/common/http';\nimport { Contract } from '../model/contract.model';\nimport { NgForm } from '@angular/forms';\n@Component({\n  selector: 'app-contract',\n  templateUrl: './contract.component.html',\n  styleUrls: ['./contract.component.css']\n})\nexport class ContractComponent implements OnInit {\n\n  constructor(public contractService: ContractService, public advisorService: AdvisorService, public carrierService: CarrierService, public mgaService: MgaService) { }\n  selectedAdvisor:number;\n  selectedCarrier:number;\n  selectedMga: number;\n  errorList: Array<string>;\n  contract: Contract =  { AdvisorId: null, MGAId: null,CarrierId:null };\n  ngOnInit(): void {\n    this.advisorService.getAdvisor();\n    this.carrierService.getCarrier();\n    this.mgaService.getMga();\n    this.restForm()\n  }\n\n  resterror() {\n    this.errorList = [];\n  }\n  restForm(form?: NgForm) {\n    if (form != null)\n      form.resetForm();\n    this.contractService.formData =\n    {\n  \n      AdvisorId:null,\n      MGAId:null,\n      CarrierId: null\n    }\n  }\n  showContract()\n  {\n    this.contractService.getContract(this.contractService.formData);\n  }\n  onSubmit(form: NgForm) {\n    this.resterror();\n    this.contractService.postContract(form.value).subscribe(\n      res => {\n       // this.restForm(form);\n       this.showContract()\n      },\n      err => {\n        this.restForm(form);\n        this.contractService.contractList.Direct = null;\n        this.contractService.contractList.IndirectList.length = 0;\n        console.log(err.error.errors);\n        this.parseErrors(err.error.errors)\n      }\n    )\n  }\n\n  delete(id: number) {\n    if (window.confirm('Are sure you want to delete this item ?')) {\n      this.contractService.deleteContract(id).subscribe\n        (\n          res => {\n            this.showContract();\n          },\n          err => {\n          }\n        )\n    }\n  }\n  parseErrors(response) {\n    var errors = [];\n    for (var key in response) {\n      for (var i = 0; i < response[key].length; i++) {\n        errors.push(response[key][i]);\n      }\n    }\n    this.errorList = errors;\n  }\n}\n","<div class=\"container-fluid\">\r\n  <div class=\"row\">\r\n\r\n    <form #form=\"ngForm\" autocomplete=\"off\" (submit)=\"onSubmit(form)\">\r\n      <div class=\"form-group\">\r\n        <div class=\"input-group\">\r\n          <div class=\"input-group-prepend\">\r\n            <div class=\"input-group-text bg-white\">\r\n              <i class=\"material-icons\">person</i>\r\n            </div>\r\n          </div>\r\n          <select name=\"AdvisorId\" [(ngModel)]=\"contractService.formData.AdvisorId\" class=\"form-control\">\r\n            <option disabled>Select Advisor</option>\r\n            <option value=\"null\">Choose Advisor</option>\r\n            <option *ngFor=\"let option of advisorService.advisorList.List\" [value]=\"option.Id\">{{option.FirstName}} {{option.LastName}}</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <div class=\"input-group\">\r\n          <div class=\"input-group-prepend\">\r\n            <div class=\"input-group-text bg-white\">\r\n              <i class=\"material-icons\">business</i>\r\n            </div>\r\n          </div>\r\n          <select name=\"CarrierId\" [(ngModel)]=\"contractService.formData.CarrierId\" class=\"form-control\">\r\n            <option disabled>Select Carrier</option>\r\n            <option value=\"null\">Choose Carrier</option>\r\n            <option *ngFor=\"let option of carrierService.carrierList.List\" [value]=\"option.Id\">{{option.BusinessName}}</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <div class=\"input-group\">\r\n          <div class=\"input-group-prepend\">\r\n            <div class=\"input-group-text bg-white\">\r\n              <i class=\"material-icons\">health_and_safety</i>\r\n            </div>\r\n          </div>\r\n          <select name=\"MGAId\" [(ngModel)]=\"contractService.formData.MGAId\" class=\"form-control\">\r\n            <option disabled>Select MGA</option>\r\n            <option value=\"null\">Choose MGA</option>\r\n            <option *ngFor=\"let option of mgaService.mgaList.List\" [value]=\"option.Id\">{{option.BusinessName}}</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <button class=\"btn btn-success btn-lg btn-block\" type=\"submit\">submit</button>\r\n      </div>\r\n\r\n    </form>\r\n  </div>\r\n  <div class=\"row\">\r\n    <button class=\" btn btn-primary btn-lg btn-lg\" (click)=showContract()>Show</button>\r\n  </div>\r\n  <div *ngIf=\"contractService.contractList.Direct!=null\">\r\n\r\n    <table class=\"table table-hover\">\r\n      <tr>\r\n        <th>Carrier Business Name</th>\r\n        <th>Advisor Full Name</th>\r\n        <th>MGA Business Name</th>\r\n        <th>Delete</th>\r\n      </tr>\r\n      <tr>\r\n        <td>{{contractService.contractList.Direct.CarrierBusinessName}}</td>\r\n        <td>{{contractService.contractList.Direct.AdvisorFirstName}} {{contractService.contractList.Direct.dvisorLastName}}</td>\r\n        <td>{{contractService.contractList.Direct.MGABusinessName}}</td>\r\n        <td (click)=delete(contractService.contractList.Direct.Id)><i class=\"material-icons\" id=\"deletecarrier\"> delete </i></td>\r\n      </tr>\r\n    </table>\r\n  </div>\r\n  <div *ngIf=\"contractService.contractList.IndirectList!=null\">\r\n    <table class=\"table table-hover\">\r\n      <tr>\r\n        <th>Carrier Business Name</th>\r\n        <th>Advisor Full Name</th>\r\n        <th>MGA Business Name</th>\r\n      </tr>\r\n      <tr *ngFor=\"let item of contractService.contractList.IndirectList\">\r\n        <td>\r\n          {{ item.CarrierBusinessName}}\r\n        </td>\r\n        <td>\r\n          {{ item.AdvisorFirstName}} {{item.dvisorLastName}}\r\n        </td>\r\n        <td>\r\n          {{ item.MGABusinessName}}\r\n        </td>\r\n      </tr>\r\n    </table>\r\n  </div>\r\n  <ul>\r\n    <li *ngFor=\"let item of errorList; let i = index\" class=\"message\">\r\n      {{item}}\r\n    </li>\r\n  </ul>\r\n</div>\r\n","import { Component, OnInit, Output, EventEmitter, Injectable } from '@angular/core';\nimport { GridValue } from '../model/grid-value.model';\nimport { Mga, MgaList } from '../model/mga.model';\nimport { HttpEventType, HttpClient, HttpHeaders, HttpParams, HttpErrorResponse } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MgaService {\n\n  //readonly APIUrl = \"https://insuranceapp.azurewebsites.net/api/\";\n  readonly APIUrl = \"https://localhost:44304/api/\";\n  formData: Mga\n  gridValue: GridValue;\n  mgaList: MgaList;\n  constructor(public http: HttpClient) {\n    this.mgaList = new MgaList();\n    this.gridValue = new GridValue();\n  }\n  restGridValue() {\n    this.gridValue.Page = 1;\n    this.gridValue.PageSize = 7;\n    this.gridValue.TotalPage = 0;\n  }\n  postMga(formData: Mga) {\n    return this.http.post(this.APIUrl + 'mga', this.formData)\n  }\n  getMga() {\n\n    let params = new HttpParams();\n    params = params.append('page', this.gridValue.Page == null ? '' : this.gridValue.Page.toString());\n    params = params.append('pageSize', this.gridValue.PageSize == null ? '' : this.gridValue.PageSize.toString());\n    return this.http.get(this.APIUrl + 'mga', { params: params }).subscribe\n      (\n\n        res => {\n          this.mgaList = res as MgaList\n          this.gridValue.TotalItem = this.mgaList.Total;\n          this.gridValue.TotalPage = Math.ceil(this.mgaList.Total / this.gridValue.PageSize)\n        },\n        err => {\n\n        }\n      )\n  }\n  deleteMga(id: number) {\n    let httpParams = new HttpParams().set('id', id.toString());\n    let options = { params: httpParams };\n    return this.http.delete(this.APIUrl + 'mga/' + id.toString());\n  }\n}\n","export class Carrier {\n  Id: number\n  BusinessName: string\n  BusinessAddress: string\n  BusinessPhoneNumber: string\n}\nexport class CarrierList {\n  List: Array<Carrier>;\n  Total: number;\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ClientApp';\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n  <a class=\"navbar-brand\" href=\"#\">\r\n    Insurance\r\n  </a>\r\n\r\n  <button class=\"navbar-toggler\" type=\"button\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n\r\n\r\n  <div class=\"collapse navbar-collapse\">\r\n    <ul class=\"navbar-nav mr-auto\">\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" href=\"/carrier\">Carrier</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" href=\"/mga\">MGA</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" href=\"/advisor\">Advisor</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" href=\"/contract\">Contract</a>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</nav>\r\n\r\n<router-outlet></router-outlet>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-carrier',\n  templateUrl: './carrier.component.html',\n  styleUrls: ['./carrier.component.css']\n})\nexport class CarrierComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"jumbtron\">\r\n  <h1 class=\"display-4 text-center\">Carrier</h1>\r\n  <hr>\r\n  <div class=\"row\">\r\n    <div class=\"col-md-5\">\r\n      <app-carrier-detail></app-carrier-detail>\r\n    </div>\r\n    <div class=\"col-md-7\">\r\n      <app-carrier-list></app-carrier-list>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CarrierComponent } from './carrier/carrier.component';\nimport { CarrierDetailComponent } from './carrier/carrier-detail/carrier-detail.component';\nimport { CarrierListComponent } from './carrier/carrier-list/carrier-list.component';\nimport { AdvisorComponent } from './advisor/advisor.component';\nimport { AdvisorDetailComponent } from './advisor/advisor-detail/advisor-detail.component';\nimport { AdvisorListComponent } from './advisor/advisor-list/advisor-list.component';\nimport { AdvisorService } from './shared/advisor.service';\nimport { CarrierService } from './shared/carrier.service';\nimport { MgaService } from './shared/mga.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MgaComponent } from './mga/mga.component';\nimport { MgaDetailComponent } from './mga/mga-detail/mga-detail.component';\nimport { MgaListComponent } from './mga/mga-list/mga-list.component';\nimport { AgGridModule } from 'ag-grid-angular';\nimport { ContractComponent } from './contract/contract.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    CarrierComponent,\n    CarrierDetailComponent,\n    CarrierListComponent,\n    AdvisorComponent,\n    AdvisorDetailComponent,\n    AdvisorListComponent,\n    MgaComponent,\n    MgaDetailComponent,\n    MgaListComponent,\n    ContractComponent,\n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    AgGridModule.withComponents([])\n  ],\n  providers: [AdvisorService, CarrierService, MgaService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class GridValue {\n\n  Page: number;\n  PageSize: number;\n  TotalPage: number;\n  Column: string;\n  TotalItem: number;\n\n}\n","import { Injectable } from '@angular/core';\nimport { GridValue } from '../model/grid-value.model';\nimport { Contract, ContractList } from '../model/contract.model';\nimport { HttpEventType, HttpClient, HttpHeaders, HttpParams, HttpErrorResponse } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContractService {\n  //readonly APIUrl = \"https://insuranceapp.azurewebsites.net/api/\";\n  readonly APIUrl = \"https://localhost:44304/api/\";\n  contractList: ContractList = { Direct: null, IndirectList: null };\n  formData: Contract;\n  constructor(public http: HttpClient)\n  {\n\n  }\n  getContract(contact:Contract) {\n\nlet params = new HttpParams().set('carrierId',contact.CarrierId==null?'': contact.CarrierId.toString())\n.set('advisorId',contact.AdvisorId==null?'': contact.AdvisorId.toString())\n.set('mgaId',contact.MGAId==null?'':contact.MGAId.toString());\n    return this.http.get(this.APIUrl + 'Contarct',{params:params}).subscribe\n      (\n\n        res => {\n          this.contractList = res as ContractList\n        },\n        err => {\n\n        }\n      )\n  }\n\n  postContract(formData: Contract) {\n    return this.http.post(this.APIUrl + 'Contarct', this.formData)\n    }\n    \n  deleteContract(id: number) {\n    let httpParams = new HttpParams().set('id', id.toString());\n    let options = { params: httpParams };\n    return this.http.delete(this.APIUrl + 'Contarct/' + id.toString());\n  }\n}\n","export class Mga {\n  Id: number\n  BusinessName: string\n  BusinessAddress: string\n  BusinessPhoneNumber: string\n}\nexport class MgaList {\n  List: Array<MgaList>;\n  Total: number;\n}\n","export class Advisor {\n  Id: number\n  FirstName: string\n  LastName: string\n  Address: string\n  PhoneNumber: string\n  HealthStatus: string\n}\nexport class AdvisorList {\n  List: Array<Advisor>;\n  Total: number;\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MgaService } from 'src/app/shared/mga.service';\nimport { NgForm } from '@angular/forms';\n@Component({\n  selector: 'app-mga-detail',\n  templateUrl: './mga-detail.component.html',\n  styleUrls: ['./mga-detail.component.css']\n})\nexport class MgaDetailComponent implements OnInit {\n\n  constructor(public service: MgaService) { }\n\n  errorList: Array<string>;\n  ngOnInit(): void {\n    this.resterror();\n    this.restForm();\n  }\n  resterror() {\n    this.errorList = [];\n  }\n  restForm(form?: NgForm) {\n    if (form != null)\n      form.resetForm();\n    this.service.formData =\n    {\n      Id: 0,\n      BusinessName: '',\n      BusinessAddress: '',\n      BusinessPhoneNumber: ''\n    }\n  }\n  onSubmit(form: NgForm) {\n    this.resterror();\n    this.service.postMga(form.value).subscribe(\n      res => {\n        this.restForm(form);\n        this.service.getMga();\n      },\n      err => {\n        console.log(err.error.errors);\n        this.parseErrors(err.error.errors)\n      }\n    )\n  }\n  parseErrors(response) {\n    var errors = [];\n    for (var key in response) {\n      for (var i = 0; i < response[key].length; i++) {\n        errors.push(response[key][i]);\n      }\n    }\n    this.errorList = errors;\n  }\n\n}\n","<form #form=\"ngForm\" autocomplete=\"off\" (submit)=\"onSubmit(form)\">\r\n  <input type=\"hidden\" name=\"Id\" #ContactId=\"ngModel\" [(ngModel)]=\"service.formData.Id\" />\r\n\r\n  <div class=\"form-group\">\r\n    <div class=\"input-group\">\r\n      <div class=\"input-group-prepend\">\r\n        <div class=\"input-group-text bg-white\">\r\n          <i class=\"material-icons\">business</i>\r\n        </div>\r\n      </div>\r\n      <input name=\"BusinessName\" #BusinessName=\"ngModel\" [(ngModel)]=\"service.formData.BusinessName\" class=\"form-control\"\r\n             placeholder=\"Business Name\" required />\r\n    </div>\r\n\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <div class=\"input-group\">\r\n      <div class=\"input-group-prepend\">\r\n        <div class=\"input-group-text bg-white\">\r\n          <i class=\"material-icons\">home_work</i>\r\n        </div>\r\n      </div>\r\n      <input name=\"BusinessAddress\" #BusinessAddress=\"ngModel\" [(ngModel)]=\"service.formData.BusinessAddress\" class=\"form-control\"\r\n             placeholder=\"Business Address\" />\r\n    </div>\r\n\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <div class=\"input-group\">\r\n      <div class=\"input-group-prepend\">\r\n        <div class=\"input-group-text bg-white\">\r\n          <i class=\"material-icons\">settings_cell</i>\r\n        </div>\r\n      </div>\r\n      <input name=\"BusinessPhoneNumber\" #BusinessPhoneNumber=\"ngModel\" [(ngModel)]=\"service.formData.BusinessPhoneNumber\" class=\"form-control\"\r\n             placeholder=\"Business PhoneNumber\" />\r\n    </div>\r\n\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <button class=\"btn btn-success btn-lg btn-block\" type=\"submit\" [disabled]=\"form.invalid\">Submit</button>\r\n  </div>\r\n</form>\r\n<ul>\r\n  <li *ngFor=\"let item of errorList; let i = index\" class=\"message\">\r\n    {{item}}\r\n  </li>\r\n</ul>\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CarrierComponent } from './carrier/carrier.component'\nimport { AdvisorComponent } from './advisor/advisor.component'\nimport { MgaComponent } from './mga/mga.component'\nimport { ContractComponent } from './contract/contract.component'\nconst routes: Routes =\n  [\n    { path: \"carrier\", component: CarrierComponent },\n    { path: \"advisor\", component: AdvisorComponent },\n    { path: \"mga\", component: MgaComponent },\n    {path: \"contract\", component: ContractComponent }\n  ];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-advisor',\n  templateUrl: './advisor.component.html',\n  styleUrls: ['./advisor.component.css']\n})\nexport class AdvisorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"jumbtron\">\r\n  <h1 class=\"display-4 text-center\">Advisor</h1>\r\n  <hr>\r\n  <div class=\"row\">\r\n    <div class=\"col-md-5\">\r\n      <app-advisor-detail></app-advisor-detail>\r\n    </div>\r\n    <div class=\"col-md-7\">\r\n      <app-advisor-list></app-advisor-list>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, Output, EventEmitter, Injectable } from '@angular/core';\nimport { GridValue } from '../model/grid-value.model';\nimport { Advisor, AdvisorList } from '../model/advisor.model';\nimport { HttpEventType, HttpClient, HttpHeaders, HttpParams, HttpErrorResponse } from '@angular/common/http';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdvisorService {\n  //readonly APIUrl = \"https://insuranceapp.azurewebsites.net/api/\";\n  readonly APIUrl = \"https://localhost:44304/api/\";\n  formData: Advisor\n  gridValue: GridValue;\n  advisorList: AdvisorList;\n  constructor(public http: HttpClient)\n  {\n    this.advisorList = new AdvisorList();\n    this.gridValue = new GridValue();\n  }\n  restGridValue() {\n    this.gridValue.Page = 1;\n    this.gridValue.PageSize = 7;\n    this.gridValue.TotalPage = 0;\n  }\n  postCarrier(formData: Advisor) {\n    return this.http.post(this.APIUrl + 'advisor', this.formData)\n  }\n  getAdvisor() {\n\n    let params = new HttpParams();\n    params = params.append('page', this.gridValue.Page == null ? '' : this.gridValue.Page.toString());\n    params = params.append('pageSize', this.gridValue.PageSize == null ? '': this.gridValue.PageSize.toString());\n    return this.http.get(this.APIUrl + 'advisor', { params: params }).subscribe\n      (\n\n        res => {\n          this.advisorList = res as AdvisorList\n          this.gridValue.TotalItem = this.advisorList.Total;\n          this.gridValue.TotalPage = Math.ceil(this.advisorList.Total / this.gridValue.PageSize)\n        },\n        err => {\n\n        }\n      )\n  }\n  deleteAdvisor(id: number) {\n    let httpParams = new HttpParams().set('id', id.toString());\n    let options = { params: httpParams };\n    return this.http.delete(this.APIUrl + 'advisor/' + id.toString());\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AdvisorService } from 'src/app/shared/advisor.service';\nimport { Advisor, AdvisorList } from 'src/app/model/advisor.model';\n\n@Component({\n  selector: 'app-advisor-list',\n  templateUrl: './advisor-list.component.html',\n  styleUrls: ['./advisor-list.component.css']\n})\nexport class AdvisorListComponent implements OnInit {\n\n  constructor(public service: AdvisorService) { }\n\n  ngOnInit(): void {\n    this.service.restGridValue();\n    this.refreshGrid();\n\n  }\n  refreshGrid() {\n    this.service.getAdvisor();\n  }\n  update(advisor: Advisor) {\n\n    this.service.formData = Object.assign({}, advisor)\n  }\n  setPage(page: number) {\n    this.service.gridValue.Page = page;\n    this.refreshGrid();\n  }\n  delete(id: number) {\n    if (window.confirm('Are sure you want to delete this item ?')) {\n      this.service.deleteAdvisor(id).subscribe\n        (\n          res => {\n            this.refreshGrid();\n          },\n          err => {\n          }\n        )\n    }\n  }\n\n}\n","<table class=\"table table-hover\">\r\n  <tr>\r\n    <th>Id</th>\r\n    <th>Full Name</th>\r\n    <th>Phone Number</th>\r\n    <th>Health Status</th>\r\n    <th>Delete</th>\r\n  </tr>\r\n  <tr *ngFor=\"let item of service.advisorList.List;\">\r\n    <td (click)=update(item)>{{item.Id}}</td>\r\n    <td (click)=update(item)>{{item.FirstName}} {{item.LastName}}</td>\r\n    <td (click)=update(item)>{{item.PhoneNumber}}</td>\r\n    <td (click)=update(item)>{{item.HealthStatus}}</td>\r\n    <td (click)=delete(item.Id)><i class=\"material-icons\" id=\"deletecarrier\"> delete </i></td>\r\n  </tr>\r\n</table>\r\n<div *ngIf=\"service.gridValue.TotalPage>1\" class=\"card-footer pb-0 pt-3\">\r\n  <ul class=\"pagination\">\r\n\r\n    <li [ngClass]=\"{disabled:service.gridValue.Page === 1}\" class=\"page-item first-item\">\r\n      <a (click)=setPage(1) class=\"page-link\">First</a>\r\n    </li>\r\n    <li [ngClass]=\"{disabled:service.gridValue.Page === 1}\" class=\"page-item previous-item\">\r\n      <a (click)=setPage(service.gridValue.Page-1) class=\"page-link\">Previous</a>\r\n    </li>\r\n    <li *ngFor=\"let page of [].constructor(service.gridValue.TotalPage) , let i = index\"\r\n        [ngClass]=\"{active:service.gridValue.Page === i+1}\" class=\"page-item number-item\">\r\n      <a (click)=setPage(i+1) class=\"page-link\">{{i+1}}</a>\r\n    </li>\r\n    <li [ngClass]=\"{disabled:service.gridValue.Page === service.gridValue.TotalPage}\" class=\"page-item next-item\">\r\n      <a (click)=setPage(service.gridValue.Page+1) class=\"page-link\">Next</a>\r\n    </li>\r\n    <li [ngClass]=\"{disabled:service.gridValue.Page === service.gridValue.TotalPage}\" class=\"page-item last-item\">\r\n      <a (click)=setPage(service.gridValue.TotalPage) class=\"page-link\">Last</a>\r\n    </li>\r\n  </ul>\r\n</div>\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}