// <auto-generated />
using System;
using Insurance.DataAccessLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Insurance.DataAccessLayer.Migrations
{
    [DbContext(typeof(InsuranceContext))]
    [Migration("20210121144708_addcontractor")]
    partial class addcontractor
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Insurance.Entity.Advisor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("HealthStatus")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Advisor");
                });

            modelBuilder.Entity("Insurance.Entity.Carrier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BusinessAddress")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("BusinessName")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("BusinessPhoneNumber")
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Carrier");
                });

            modelBuilder.Entity("Insurance.Entity.Contract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("FirstContractorId")
                        .HasColumnType("int");

                    b.Property<int>("SecondContractorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FirstContractorId");

                    b.HasIndex("SecondContractorId");

                    b.ToTable("Contract");
                });

            modelBuilder.Entity("Insurance.Entity.FirstContractor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AdvisorId")
                        .HasColumnType("int");

                    b.Property<int?>("CarrierId")
                        .HasColumnType("int");

                    b.Property<int?>("MGAId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdvisorId");

                    b.HasIndex("CarrierId");

                    b.HasIndex("MGAId");

                    b.ToTable("FirstContractor");
                });

            modelBuilder.Entity("Insurance.Entity.MGA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BusinessAddress")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("BusinessName")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("BusinessPhoneNumber")
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("MGA");
                });

            modelBuilder.Entity("Insurance.Entity.SecondContractor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AdvisorId")
                        .HasColumnType("int");

                    b.Property<int?>("CarrierId")
                        .HasColumnType("int");

                    b.Property<int?>("MGAId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdvisorId");

                    b.HasIndex("CarrierId");

                    b.HasIndex("MGAId");

                    b.ToTable("SecondContractor");
                });

            modelBuilder.Entity("Insurance.Entity.Contract", b =>
                {
                    b.HasOne("Insurance.Entity.FirstContractor", "FirstContractor")
                        .WithMany("Contracts")
                        .HasForeignKey("FirstContractorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Insurance.Entity.SecondContractor", "SecondContractor")
                        .WithMany("Contracts")
                        .HasForeignKey("SecondContractorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("FirstContractor");

                    b.Navigation("SecondContractor");
                });

            modelBuilder.Entity("Insurance.Entity.FirstContractor", b =>
                {
                    b.HasOne("Insurance.Entity.Advisor", "Advisor")
                        .WithMany("FirstContractors")
                        .HasForeignKey("AdvisorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Insurance.Entity.Carrier", "Carrier")
                        .WithMany("FirstContractors")
                        .HasForeignKey("CarrierId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Insurance.Entity.MGA", "MGA")
                        .WithMany("FirstContractors")
                        .HasForeignKey("MGAId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Advisor");

                    b.Navigation("Carrier");

                    b.Navigation("MGA");
                });

            modelBuilder.Entity("Insurance.Entity.SecondContractor", b =>
                {
                    b.HasOne("Insurance.Entity.Advisor", "Advisor")
                        .WithMany("SecondContractors")
                        .HasForeignKey("AdvisorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Insurance.Entity.Carrier", "Carrier")
                        .WithMany("SecondContractors")
                        .HasForeignKey("CarrierId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Insurance.Entity.MGA", "MGA")
                        .WithMany("SecondContractors")
                        .HasForeignKey("MGAId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Advisor");

                    b.Navigation("Carrier");

                    b.Navigation("MGA");
                });

            modelBuilder.Entity("Insurance.Entity.Advisor", b =>
                {
                    b.Navigation("FirstContractors");

                    b.Navigation("SecondContractors");
                });

            modelBuilder.Entity("Insurance.Entity.Carrier", b =>
                {
                    b.Navigation("FirstContractors");

                    b.Navigation("SecondContractors");
                });

            modelBuilder.Entity("Insurance.Entity.FirstContractor", b =>
                {
                    b.Navigation("Contracts");
                });

            modelBuilder.Entity("Insurance.Entity.MGA", b =>
                {
                    b.Navigation("FirstContractors");

                    b.Navigation("SecondContractors");
                });

            modelBuilder.Entity("Insurance.Entity.SecondContractor", b =>
                {
                    b.Navigation("Contracts");
                });
#pragma warning restore 612, 618
        }
    }
}
